name: Docker 构建和发布

on:
  push:
    branches:
      - main
  schedule:
    - cron: "33 3 26 * *"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: 检出仓库
        uses: actions/checkout@v2

      - name: 获取 nginx 版本
        id: get-version
        run: |
          echo "::set-output name=version::$(docker run --rm "${{ secrets.DOCKER_USERNAME_TEST }}/${{ secrets.DOCKER_IMAGE_TEST }}:${{ secrets.DOCKER_TAG_TEST }}" cat /tmp/nginx_version.txt)"

      - name: 获取 nginx 版本
        id: get-version-all
        run: |
          echo "::set-output name=version::$(docker run --rm "${{ secrets.DOCKER_USERNAME_TEST }}/${{ secrets.DOCKER_IMAGE_TEST }}:${{ secrets.DOCKER_TAG_TEST }}" cat /tmp/nginx_extras_version.txt)"

      - name: 检查版本并跳过构建和推送
        id: check-version
        run: |
          if [ "${{ steps.get-version-all.outputs.version }}" = "$(cat version)" ]; then
            echo "版本 ${{ steps.get-version-all.outputs.version }} 已存在，跳过构建和推送。"
            echo "::set-output name=skip::true"
          else
            echo "版本 ${{ steps.get-version-all.outputs.version }} 不同，继续进行构建和推送。"
            echo "::set-output name=skip::false"
          fi

      - name: 设置 Docker Buildx
        if: steps.check-version.outputs.skip != 'true'
        uses: docker/setup-buildx-action@v1

      - name: 登录到 Docker Hub
        if: steps.check-version.outputs.skip != 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 设置构建时间戳
        if: steps.check-version.outputs.skip != 'true'
        id: set-timestamp
        run: echo "::set-output name=timestamp::$(date +'%Y%m%d%H%M%S')"

      - name: 提取版本前缀
        if: steps.check-version.outputs.skip != 'true'
        id: extract_version_prefix
        run: |
          version=${{ steps.get-version.outputs.version }}
          version_prefix=${version:0:4}
          echo "::set-output name=version_prefix::$version_prefix"

      - name: 构建并推送 Docker 镜像
        if: steps.check-version.outputs.skip != 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm64,linux/arm/v7,linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx-extras:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx-extras:${{ steps.get-version.outputs.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx-extras:${{ steps.extract_version_prefix.outputs.version_prefix }}
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx-extras:${{ steps.get-version.outputs.version }}-${{ steps.set-timestamp.outputs.timestamp }}
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx-extras:${{ steps.get-version-all.outputs.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx-extras:${{ steps.get-version-all.outputs.version }}-${{ steps.set-timestamp.outputs.timestamp }}

      - name: 更新版本文件
        if: steps.check-version.outputs.skip != 'true'
        run: |
          echo "${{ steps.get-version-all.outputs.version }}" > version

      - name: 上传版本文件
        if: steps.check-version.outputs.skip != 'true'
        uses: actions/upload-artifact@v2
        with:
          name: version
          path: version

      - name: 更新仓库中的版本文件
        if: steps.check-version.outputs.skip != 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add version
          current_time=$(TZ='Asia/Shanghai' date "+%Y-%m-%d %H:%M:%S")
          git commit -m "更新版本 - 北京时间: $current_time"
          git push
